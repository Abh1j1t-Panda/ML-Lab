# -*- coding: utf-8 -*-
"""SVMLab.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sIaEQCLnfpEzVnzLQv7bvA2x6r2OzsKX
"""

from google.colab import drive

drive.mount('/content/drive')

import csv

import numpy as np

import pandas as pd

mydata=pd.read_csv('/content/Iris.csv')

mydata.head()

x=pd.DataFrame(mydata)

import matplotlib.pyplot as plt

x.plot()

mydata['Species'].unique()

import seaborn as sns
import matplotlib.pyplot as plt
sns.pairplot(mydata)

mydata.describe(include='all')

import seaborn as sns
import matplotlib.pyplot as plt
sns.pairplot(mydata)

g=sns.relplot(x='PetalLengthCm',y='SepalLengthCm',data=mydata, hue='Species',style='Species')
g.fig.set_size_inches(10,5)
plt.show

x=mydata.iloc[:,0:4].values
y=mydata.iloc[:,4].values

x

y

from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
y=le.fit_transform(y)
y

from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score,precision_score,recall_score,f1_score
from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(x,y,test_size=0.3,random_state=42)

from sklearn.svm import SVC,LinearSVC

linear_SVC = LinearSVC(max_iter=4000)
linear_SVC.fit(X_train, Y_train)
Y_pred = linear_SVC.predict(X_test)
accuracy_svc = round(accuracy_score(Y_test, Y_pred) * 100, 2)
acc_linear_SVC = round(linear_SVC.score(X_train, Y_train) * 100, 2)
cm=confusion_matrix(Y_test,Y_pred)
accuracy= accuracy_score(Y_test,Y_pred)
precision=precision_score(Y_test,Y_pred,average='micro')
recall=recall_score(Y_test,Y_pred,average='micro')
f1=f1_score(Y_test,Y_pred,average='micro')
print("confusion matrix for SVM \n",cm)
print('accuracy_SvM:%3f',accuracy)
print('recall-SVM :%3f',recall)
print('f1-score SvM :%3f',f1)